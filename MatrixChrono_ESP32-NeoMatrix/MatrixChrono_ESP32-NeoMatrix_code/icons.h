/*
 * MatrixChrono - IoT Smart Home Clock System
 * Copyright (c) 2025 Jo√£o Fernandes
 * 
 * This work is licensed under the Creative Commons Attribution-NonCommercial 
 * 4.0 International License. To view a copy of this license, visit:
 * http://creativecommons.org/licenses/by-nc/4.0/
 */
 
template <size_t rows, size_t cols>
void displayIcon(uint16_t (&icon)[rows][cols], int offsetX, int offsetY) {
  for (int row = 0; row < rows; row++) {
    for (int col = 0; col < cols; col++) {
      // Calculate the actual pixel position with the offset
      int pixelX = col + offsetX;
      int pixelY = row + offsetY;

      // Check if the pixel position is within the valid range
      if (pixelX >= 0 && pixelX < matrix.width() && pixelY >= 0 && pixelY < matrix.height()) {
        matrix.drawPixel(pixelX, pixelY, icon[row][col]);
      }
    }
  }
  matrix.show();
}

uint16_t wifi_frame1[][11] = {
  {0x0000, 0x0000, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x0000, 0x0000},
  {0x0000, 0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3FFF, 0x0000},
  {0x3FFF, 0x0000, 0x0000, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x0000, 0x0000, 0x3FFF},
  {0x0000, 0x0000, 0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3FFF, 0x0000, 0x0000},
  {0x0000, 0x0000, 0x0000, 0x0000, 0x3FFF, 0x3FFF, 0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000},
  {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},
  {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}
};

uint16_t wifi_frame2[][11] = {
  {0x0000, 0x0000, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x0000, 0x0000},
  {0x0000, 0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3FFF, 0x0000},
  {0x3FFF, 0x0000, 0x0000, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x0000, 0x0000, 0x3FFF},
  {0x0000, 0x0000, 0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3FFF, 0x0000, 0x0000},
  {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},
  {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},
  {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}
};


uint16_t wifi_frame3[][11] = {
  {0x0000, 0x0000, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x0000, 0x0000},
  {0x0000, 0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3FFF, 0x0000},
  {0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3FFF},
  {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},
  {0x0000, 0x0000, 0x0000, 0x0000, 0x3FFF, 0x3FFF, 0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000},
  {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},
  {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}
};


uint16_t wifi_frame4[][11] = {
  {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},
  {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},
  {0x0000, 0x0000, 0x0000, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x0000, 0x0000, 0x0000},
  {0x0000, 0x0000, 0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3FFF, 0x0000, 0x0000},
  {0x0000, 0x0000, 0x0000, 0x0000, 0x3FFF, 0x3FFF, 0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000},
  {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},
  {0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}
};

uint16_t no_wifi[][11] = {
  {0x0000, 0x0000, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0x3FFF, 0xf800, 0xf800, 0x0000, 0x0000},
  {0x0000, 0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xf800, 0xf800, 0x0000, 0x3FFF, 0x0000},
  {0x3FFF, 0x0000, 0x0000, 0x3FFF, 0x3FFF, 0xf800, 0xf800, 0x3FFF, 0x0000, 0x0000, 0x3FFF},
  {0x0000, 0x0000, 0x3FFF, 0x0000, 0xf800, 0xf800, 0x0000, 0x0000, 0x3FFF, 0x0000, 0x0000},
  {0x0000, 0x0000, 0x0000, 0xf800, 0xf800, 0x3FFF, 0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000},
  {0x0000, 0x0000, 0xf800, 0xf800, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000},
  {0x0000, 0xf800, 0xf800, 0x0000, 0x0000, 0x3FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000}
};

